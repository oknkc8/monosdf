train{
    expname = replica_grids_sparseviews_reg
    expcomment = monosdf_depth_reg_warp_pixel_from_start_warp_both_after_half_ssim_50000_10/
    dataset_class = datasets.scene_dataset.SceneDatasetDN
    model_class = model.network.MonoSDFNetwork
    loss_class = model.loss.MonoSDFLoss
    learning_rate = 5.0e-4
    lr_factor_for_grid = 20.0
    num_pixels = 1024
    checkpoint_freq = 200
    plot_freq = 100
    split_n_pixels = 1024
    reg_patch_size = 8
    max_total_iters = 20000
    warp_pixel_patch_both = True
    sched_decay_rate = 0.75
}
plot{
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [-1.0, 1.0]
}
loss{
    rgb_loss = torch.nn.L1Loss
    eikonal_weight = 0.1
    normal_smooth_weight = 0.05
    patch_depth_smooth_weight = 0.05
    patch_normal_smooth_weight = 0.0
    entropy_weight = 0.0
    entropy_log_scaling = False
    entropy_acc_thresh = 0.9
    patch_rgb_loss = ssim
    warped_rgb_weight = 0.1
    depth_weight = 0.1
    normal_l1_weight = 0.05
    normal_cos_weight = 0.05
    min_visibility = 1e-3
    end_step = 20000
}
dataset{
    data_dir = Replica
    img_res = [384, 384]
    scan_id = 1
    center_crop_type = center_crop_for_replica 
    num_views = 10
    near_pose_type = rot_from_origin
    near_pose_rot = 5
    near_pose_trans = 0.1
}
model{
    feature_vector_size = 256
    scene_bounding_sphere = 1.0
    
    Grid_MLP = True

    use_patch_reg = True
    use_unseen_pose = True
    use_warped_colors = True
    h_patch_size = 5
    use_occ_detector = True

    implicit_network
    {
        d_in = 3
        d_out = 1
        dims = [256, 256]
        geometric_init = True
        bias = 0.6
        skip_in = [4]
        weight_norm = True
        multires = 6
        inside_outside = True
        use_grid_feature = True
        divide_factor = 1.5
    }

    rendering_network
    {
        mode = idr 
        d_in = 9 
        d_out = 3
        dims = [256, 256]
        weight_norm = True
        multires_view = 4
        per_image_code = True
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_min = 0.0001
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64 
        N_samples_eval = 128 
        N_samples_extra = 32 
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
    }
}
